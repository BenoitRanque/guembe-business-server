const pg = require('utils/pg')

module.exports = async function ({ sale_id  }, pgClient = null) {
  const db = pgClient === null ? pg : pgClient

  await db.query(`
    WITH inserted_invoices (invoice_id, economic_activity_id) AS (
      INSERT INTO accounting.invoice (economic_activity_id, amount)
      SELECT
        webstore.product.economic_activity_id
        SUM(webstore.sale_listing.quantity
          * webstore.listing_product.quantity
          * webstore.listing_product.price) AS amount
      FROM webstore.sale_listing
      LEFT JOIN webstore.listing_product ON webstore.sale_listing.listing_id = webstore.listing_product.listing_id
      LEFT JOIN webstore.product ON webstore.listing_product.product_id = webstore.product.product_id
      WHERE webstore.sale_listing.sale_id = $1
      GROUP BY webstore.product.economic_activity_id
    ), inserted_invoice_items (invoice_id, index) AS (
      INSERT INTO accounting.invoice_item (invoice_id, index, name, quantity, price)
      SELECT
        inserted_invoices.invoice_id,
        index -- need indexes here (series of number from 0 to x)
        webstore.listing_i18n.name AS name, -- get names from i18n
        webstore.listing_product.quantity * webstore.sale_listing.quantity AS quantity,
        webstore.listing_product.price AS price
      FROM inserted_invoices
      LEFT JOIN webstore.product USING (economic_activity_id)
      LEFT JOIN webstore.listing_product USING (product_id)
      LEFT JOIN webstore.sale_listings USING (listing_id)
      WHERE webstore.sale_listing.sale_id = $1
    ), inserted_sale_invoices (sale_id, invoice_id) AS (
      INSERT INTO webstore.sale_invoice (sale_id, invoice_id)
      SELECT inserterted_invoices.invoice_id, $1 FROM inserted_invoices
    ) SELECT invoice_id FROM inserted_invoices
  `, [ sale_id ])
}
