const pg = require('utils/pg')
const izi = require('utils/izi')
module.exports = async function ({ invoice_id }, pgClient = null) {
  const db = pgClient === null ? pg : pgClient
  // call this function in a trigger when the invoice is created.
  const { comprador, razonSocial, actividadEconomica } = await getInvoiceInformation(invoice_id, db)
  const listaItems = await getInvoiceItems(invoice_id, db)
  const iziInvoice = await izi.facturas({
    emisor: process.env.IZI_NIT_EMISOR,
    comprador,
    razonSocial,
    actividadEconomica,
    listaItems
  })

  return iziInvoice
}

async function getInvoiceInformation ({ invoice_id }, db) {
  // note the double quotation marks "" around the column names, to preserve upper/lowercase
  const { rows: [ information ] } = await db.query(/*sql*/`
    SELECT
      accounting.invoice.economic_activity_id AS "actividadEconomica",
      accounting.invoice.business_name AS "razonSocial",
      accounting.invoice.tax_identification_number AS "comprador"
    FROM accounting.invoice
    LEFT JOIN webstore.sale_invoice USING (invoice_id)
    LEFT JOIN webstore.sale USING (sale_id)
    LEFT JOIN account.client USING (client_id)
    WHERE accounting.invoice.invoice_id = $1
  `, [ invoice_id ])

  return information
}

async function getInvoiceItems ({ invoice_id }, db) {
  // note the double quotation marks "" around the column names, to preserve upper/lowercase
  const { rows: items } = await db.query(/*sql*/`
    SELECT
      accounting.invoice_item.name AS "articulo",
      accounting.invoice_item.price AS "precioUnitario",
      accounting.invoice_item.quantity AS "cantidad"
    FROM accounting.invoice_item
    WHERE accounting.invoice_item.invoice_id = $1
  `, [ invoice_id ])

  return items.map(({ articulo, precioUnitario, cantidad }) => ({
    articulo,
    cantidad: Number(cantidad),
    precioUnitario: precioUnitario / 100
  }))
}
