const pg = require('utils/pg')
const uuid = require('uuid/v4')

const validateCheckout = require('./validateCheckout')
const createWebstoreSale = require('./createWebstoreSale')
const emptyCart = require('./emptyCart')
const getWebstoreSaleTotal = require('./getWebstoreSaleTotal')
const createKhipuPayment = require('./createKhipuPayment')
const createPayment = require('./createPayment')

module.exports = async function webstoreCheckout ({ user_id, client_id }) {
  const pgClient = await pg.connect()

  try {
    await pgClient.query('BEGIN')

    await validateCheckout({ user_id }, pgClient)

    const sale_id = await createWebstoreSale({ user_id, client_id }, pgClient)
    await emptyCart({ user_id }, pgClient)

    const payment_id = uuid()
    const amount = await getWebstoreSaleTotal({ sale_id }, pgClient)

    const khipuPayment = await createKhipuPayment({ payment_id, amount, sale_id, user_id }, pgClient)

    await createPayment({ payment_id, sale_id, amount, khipuPayment }, pgClient)

    const {
      khipu_payment_url,
      khipu_app_url
    } = khipuPayment

    await pgClient.query('COMMIT')

    return {
      sale_id,
      sale_payment: {
        payment: {
          payment_id,
          khipu_app_url,
          khipu_payment_url
        }
      }
    }
  } catch (error) {
    await pgClient.query('ROLLBACK')
    throw error
  } finally {
    pgClient.release()
  }
}