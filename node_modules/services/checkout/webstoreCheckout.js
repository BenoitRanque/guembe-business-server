const pg = require('utils/pg')
const uuid = require('uuid/v4')

const validateCheckout = require('./validateCheckout')
const createWebstoreSale = require('./createWebstoreSale')
const emptyCart = require('./emptyCart')
const getWebstoreSaleTotal = require('./getWebstoreSaleTotal')
const createKhipuPayment = require('./createKhipuPayment')
const createPayment = require('./createPayment')

module.exports = async function webstoreCheckout ({ user_id, client_id }) {
  const pgClient = await pg.connect()

  try {
    await pgClient.query('BEGIN')
    console.log('started transaction')
    await validateCheckout({ user_id }, pgClient)
    console.log('validated cart')
    const sale_id = await createWebstoreSale({ user_id, client_id }, pgClient)
    console.log('created sale')
    await emptyCart({ user_id }, pgClient)
    console.log('emptied cart')

    const payment_id = uuid()
    const amount = await getWebstoreSaleTotal({ sale_id }, pgClient)
    console.log('fetched total')
    const khipuPayment = await createKhipuPayment({ payment_id, amount, sale_id, user_id }, pgClient)
    console.log('created khipu payment')

    await createPayment({ payment_id, sale_id, amount, khipuPayment }, pgClient)
    console.log('created payment')

    await pgClient.query('COMMIT')

    console.log('return payment url from', khipuPayment)
    return khipuPayment
  } catch (error) {
    await pgClient.query('ROLLBACK')
    throw error
  } finally {
    pgClient.release()
  }
}